/*
Behavior:
Your model `flat_order` has the config {{ config(schema='SRC_ORDER') }}
- if the profile you're running is called `prod` (i.e. you're the production dbt runner), then your model will be generated as SRC_ORDER.flat_order
- if the profile you're running is _not_ called `prod` and the schema you've specified for that profile is `CMEYERS`, then your model will be generated as CMEYERS_SRC_ORDER.flat_order

This setup lets all the data engineers/analysts/scientists share the same `WORK` database to test their branches of DBT without fear of overwriting each other's models (everyone's models will have their own separate schema).

DB_STATS hack:
DB_STATS is a schema in the ANALYTICS database that holds models generated by our dbt_artifacts package (for instance, ANALYTICS.DB_STATS.dim_dbt__models).
- if the profile you're running is called `prod` (i.e. you're the production dbt runner), and the schema is DB_STATS (for our dbt_artifacts package), then the schema will be DB_STATS
- if the profile you're running is not called `prod` (i.e. it's `dev` and you're running locally), and the schema is DB_STATS (for our dbt_artifacts package), then the schema will be <username>_SRC (e.g. CMEYERS_SRC).

Defaulting DB_STATS tables to <username>_SRC is a hack to avoid having to create a <username>_DB_STATS schema for every engineer on the data team.
This means all the tables created by our dbt_artifacts package will get put in a user's <username>_SRC schema when a user is running dbt locally.  The user should just ignore those tables.

NOTE: DBT will fail if you do not specify a custom schema (i.e. with this setup you cannot default to the schema in your ~/.dbt/profiles.yml)
*/

{% macro generate_schema_name(custom_schema_name, node) -%}

    {%- if target.name == 'prod' and custom_schema_name is not none -%}

        {{  custom_schema_name | trim }}

    {%- else -%}
        {{ print("Custom Schema: " ~ target.database ~ '.'~target.schema ~ "_" ~ custom_schema_name) }}
        {{ target.schema }}_{{ custom_schema_name | trim }}

    {%- endif -%}
{%- endmacro %}
